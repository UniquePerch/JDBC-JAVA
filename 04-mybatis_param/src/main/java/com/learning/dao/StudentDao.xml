<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.learning.dao.StudentDao">
    <select id="selectStudentByID" parameterType="int" resultType="com.learning.entity.Student">
        <!--
            parameterType:dao接口中方法参数的数据类型。
            parameterType它的值是java数据的全限定名称或者是mybatis定义的别名
            例如parameterType=”java.lang.Integer“
               parameterType = "int"

             注意：parameterType不是强制的，mybatis通过反射机制能够发现接口参数的数据类型
             所以可以没有，一般也不写。
        -->
        select id,name,email,age from student where id = #{id}
    </select>

    <!--
        多个参数，使用@Param命名
    -->
    <select id="selectMulitParam" resultType="com.learning.entity.Student">
        select id,name,email,age from student where name = #{myname} or age = #{myage}
    </select>
    <!--多个参数，使用java对象的属性值，作为参数实际值
         使用方法：#{属性名,javaType=类型名称,jdbcType=数据类型} 很少用。
         javaType:指java中的属性的数据类型
         jdbcType：值在数据库中的数据类型
         例如#{paramName,javaType=String,jdbcType=varchar }
         一般使用简化方式：#{paramName}
    -->
    <select id="selectMultiObject" resultType="com.learning.entity.Student">
        select id,name,email,age from student where name = #{paramName} or age = #{paramage}
    </select>
    <select id="selectMultiPosition" resultType="com.learning.entity.Student">
        select id,name,email,age from student where name = #{arg0} or age =#{arg1}
    </select>
    <select id="selectMultiByMAP" resultType="com.learning.entity.Student">
        select id,name,email,age from student where name = #{myname} or age =#{myage}
    </select>
    <!--字符串替换-->
    <select id="selectUse$" resultType="com.learning.entity.Student">
        select id,name,email,age from student where name = ${myname};
    </select>
    <!--字符串替换排序-->
    <select id="selectUse$Order" resultType="com.learning.entity.Student">
        select * from student order by ${colname}
    </select>
</mapper>