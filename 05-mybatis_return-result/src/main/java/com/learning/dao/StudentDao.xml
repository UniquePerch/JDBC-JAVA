<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.learning.dao.StudentDao">
    <select id="selectStudentByID" parameterType="int" resultType="com.learning.entity.Student">
        <!--
            parameterType:dao接口中方法参数的数据类型。
            parameterType它的值是java数据的全限定名称或者是mybatis定义的别名
            例如parameterType=”java.lang.Integer“
               parameterType = "int"

             注意：parameterType不是强制的，mybatis通过反射机制能够发现接口参数的数据类型
             所以可以没有，一般也不写。
        -->
        select id,name,email,age from student where id = #{studentId}
    </select>

    <!--
        多个参数，使用@Param命名
    -->
    <select id="selectMulitParam" resultType="com.learning.entity.Student">
        select id,name,email,age from student where name = #{myname} or age = #{myage}
    </select>
    <select id="selectStudentReturnViewStudent" resultType="ViewStudent">
        select id,name,email,age from student where id =#{studentId}
    </select>
    <select id="countStudent" resultType="java.lang.Integer">
        select count(*) from student
    </select>
    <!--返回map
        1)列名是map的key，列值是map的value
        2)只能最多返回一行记录。多余会报错
        -->
    <select id="selectMapById" resultType="map">
        select id,name from student where id = #{id}
    </select>
    <!--使用resultMap
        1)先定义resultMap
        2)在select标签，使用resultMap
    -->

    <!--定义resultMap
        id:全限定名称，表示你定义的这个resultMap
        type：java类型的全限定名称
    -->
    <resultMap id="studentMap" type="com.learning.entity.Student">
        <!--
            column：列名
            property :属性名
        -->
        <id column="id" property="id"></id>
        <result column="name" property="email"></result>
        <result column="email" property="name"></result>
        <result column="age" property="age"></result>
    </resultMap>
    <select id="selectAllStudent" resultMap="studentMap">
        select id,name,email,age from student
    </select>
    <!--第二种方式-->
    <select id="selectDifColPropety" resultType="com.learning.entity.MyStudent">
        select id as myid,name as myname,email as myemail,age as myage from student
    </select>
    <!--第一种方式，直接拼接like-->
    <select id="selectlikeOne" resultType="com.learning.entity.Student">
        select id,name,email,age from student where name like #{name}
    </select>
    <!--第二种方式，在mapper中拼接like-->
    <select id="selectlike" resultType="com.learning.entity.Student">
        select id,name,email,age from student where name like "%" #{name} "%"
    </select>
</mapper>